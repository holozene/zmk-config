/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define CLR BT_CLR
#define SEL BT_SEL
#define OTOG OUT_TOG

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
/* -------------------------------------------------------------         ------------------------------------------------------------ */
/* |   ESC   |    Q    |    W    |    E    |    R    |    T    |         |    Y    |    U    |    I    |    O    |    P    | INSERT | */
/* |  PAUSE  |    A    |    S    |    D    |    F    |    G    |         |    H    |    J    |    K    |    L    |    ;    |   '    | */
/* |  PREV   |    Z    |    X    |    C    |    V    |    B    |         |    N    |    M    |    ,    |    .    |    /    |  NEXT  | */
                        /* | NUMBERS |         | CONTROL |   DEL   | |   END   |   ALT    |         | SYMBOLS | */
                        /* |  BKSP   |  SHIFT  |  FNCTN  |   GUI   | |  HOME   |   TAB    |  SPACE  |  ENTER  | */
                        bindings = < 
    &kp ESC   &kp Q     &kp W     &kp E     &kp R     &kp T               &kp Y     &kp U     &kp I     &kp O     &kp P     &kp INS
    &kp C_PP  &kp A     &kp S     &kp D     &kp F     &kp G               &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
   &kp C_PREV &kp Z     &kp X     &kp C     &kp V     &kp B               &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp C_NEXT
                            &mo 1     &kp       &kp LCTRL &kp DEL     &kp END   &kp RALT  &kp       &mo 2    
                            &kp BSPC  &kp LSHFT &mo 3     &kp LGUI    &kp HOME  &kp TAB   &kp SPACE &kp RET
                        >;
                };
                lower_layer {
/* -------------------------------------------------------------         -------------------------------------------------------------------- */
/* |   TAB   |    1    |    2    |    3    |    4    |    5    |         |     6      |   7     |   8     |    9    |    0    |             | */
/* | BT_CLR  |   BT1   |   BT2   |   BT3   |   BT4   |   BT5   |         |   C_LEFT   |  LEFT   |  DOWN   |   UP    |  RIGHT  |   C_RIGHT   | */
/* |  SHIFT  |  LOAD   |  RESET  |         | OUTPUT  |         |         |            |         |         |         |         |             | */
                        /* |         |         |         |         | |        |         |         |         | */
                        /* |         |         |         |         | |        |         |         |         | */
                        bindings = <
    &trans    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5              &kp N6       &kp N7    &kp N8    &kp N9    &kp N0    &trans
    &bt CLR   &bt SEL 0 &bt SEL 1 &bt SEL 2 &bt SEL 3 &bt SEL 4           &kp LC(LEFT) &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp LC(RIGHT)
    &trans    &bootloader &reset  &trans    &out OTOG &trans              &trans       &trans    &trans    &reset    &bootloader &trans
                           &trans    &trans    &trans    &trans        &trans   &trans    &trans    &trans   
                           &trans    &trans    &trans    &trans        &trans   &trans    &trans    &trans   
                        >; 
                };

                raise_layer {
/* -------------------------------------------------------------         -------------------------------------------------------------- */
/* |         |    !    |    @    |    #    |    $    |    %    |         |    ^    |    &    |    *    |    (    |    )    |          | */
/* |         |         |         |         |         |         |         |    -    |    =    |    [    |    ]    |   "|"   |    \     | */
/* |         |         |         |         |         |         |         |    _    |    +    |    {    |    }    |         |    ~     | */
                        /* |         |         |         |         | |        |         |         |         | */
                        /* |         |         |         |         | |        |         |         |         | */
                         bindings = <
    &kp GRAVE &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT           &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR  &trans
    &trans    &trans    &trans    &trans    &trans    &trans              &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp PIPE  &kp BSLH
    &trans    &trans    &trans    &trans    &trans    &trans              &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC  &trans    &kp TILDE
                           &trans    &trans    &trans    &trans       &trans   &trans    &trans    &trans   
                           &trans    &trans    &trans    &trans       &trans   &trans    &trans    &trans   
                        >;
                };

                fn_layer {
/* -------------------------------------------------------------         -------------------------------------------------------------- */
/* |         |   F1    |   F2    |   F3    |   F4    |   F5    |         |   F6    |   F7    |   F8    |   F9    |   F10   |          | */
/* |         |   F11   |   F12   |   F13   |   F14   |   F15   |         |   F16   |   F17   |   F18   |   F19   |   F20   |          | */
/* |         |   F21   |   F22   |   F23   |   F24   |         |         |         |         |         |         |         |          | */
                        /* |         |         |         |         | |        |         |         |         | */
                        /* |         |         |         |         | |        |         |         |         | */
                         bindings = <
    &trans    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5              &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &trans    
    &trans    &kp F11   &kp F12   &kp F13   &kp F14   &kp F15             &kp F16   &kp F17   &kp F18   &kp F19   &kp F20   &trans    
    &trans    &kp F21   &kp F22   &kp F23   &kp F24   &trans              &trans    &trans    &trans    &trans    &trans    &trans
                           &trans    &trans    &trans    &trans       &trans   &trans    &trans    &trans   
                           &trans    &trans    &trans    &trans       &trans   &trans    &trans    &trans   
                        >;
                };
        };
};